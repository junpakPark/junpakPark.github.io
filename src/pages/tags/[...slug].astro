---
import {getCollection, type CollectionEntry} from "astro:content";
import {processPosts, slugify} from "../../utils";

import PostList from "../../components/PostList";
import BaseLayout from "../../layouts/BaseLayout.astro";
import MainLayout from "../../layouts/MainLayout.astro";
import SidebarLayout from "../../layouts/SidebarLayout.astro";


export const getStaticPaths = async (): Promise<any[]> => {
    const allPosts: CollectionEntry<'blog'>[] = await getCollection("blog");
    const processedPosts: CollectionEntry<"blog">[] = processPosts(allPosts);
    const uniqueTags = [...new Set(processedPosts.flatMap(post => post.data.tags))];

    return uniqueTags.map(tag => {
        const postsWithTag = processedPosts.filter(post => post.data.tags.includes(tag));
        const taggedPosts = processPosts(postsWithTag);

        return {
            params: {
                slug: slugify(tag),
            },
            props: {
                tag,
                taggedPosts,
            },
        };
    });
};

const {tag, taggedPosts} = Astro.props;
---
<BaseLayout>
    <SidebarLayout/>
    <MainLayout>
        <div
                class="flex h-auto max-w-screen-xl mx-auto justify-around"
                style="min-height: calc(100vh - 136px)">
            <article class="p-[4rem] max-w-[64rem]">
                <h1 class="text-2xl font-semibold">
                    <span class="text-purple-600"> {taggedPosts.length} </span>
                    Posts about
                    <span class="text-purple-600"> {tag} </span>
                    tags!
                </h1>
                <PostList posts={taggedPosts}/>
            </article>
            <div class="hidden xl:block col-span-1 w-[16rem]"></div>
        </div>
    </MainLayout>
</BaseLayout>
