---
import {type CollectionEntry, getCollection} from "astro:content";
import {getMostRecentDateFormatted, processPosts} from "../../utils";

import PostList from "../../components/PostList";
import BaseLayout from "../../layouts/BaseLayout.astro";
import MainLayout from "../../layouts/MainLayout.astro";
import SidebarLayout from "../../layouts/SidebarLayout.astro";


export const getStaticPaths = async (): Promise<any[]> => {
    const allCategories: CollectionEntry<'category'>[] = await getCollection("category");
    const allPosts: CollectionEntry<"blog">[] = processPosts(await getCollection("blog"));

    return allCategories.map(category => {
        const categoryPosts: CollectionEntry<"blog">[] = allPosts.filter(post => post.data.category.id === category.id);

        return {
            params: {
                slug: category.id
            },
            props: {
                category, categoryPosts
            }
        }
    });
};

const {category, categoryPosts} = Astro.props;
---
<BaseLayout>
    <SidebarLayout/>
    <MainLayout>
        <div class="grid grid-cols-1 xl:grid-cols-4 gap-8 h-auto max-w-screen-xl mx-auto">
            <article class="col-span-3 p-[4rem] space-y-4">
                <label class="font-bold inline-flex border-b-2 border-solid border-fuchsia-400 text-fuchsia-400">{category.data.title}</label>
                <p class="text-4xl text-black font-bold whitespace-pre-wrap break-keep w-[600px]">{category.data.description}</p>
                <p class="text-black">
                    <span class="text-fuchsia-400">{categoryPosts.length}</span> Posts |
                    Last updated on {getMostRecentDateFormatted(categoryPosts)}
                </p>
                <PostList posts={categoryPosts}/>
            </article>
            <div class="hidden xl:block col-span-1 w-[16rem]">
                <div class="border-l h-full">

                </div>
            </div>
        </div>

    </MainLayout>
</BaseLayout>
