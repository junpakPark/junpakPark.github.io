---
import {getCollection, type CollectionEntry} from "astro:content";
import {processPosts} from "../../utils";

import TagList from "../../components/TagList";
import BaseLayout from "../../layouts/BaseLayout.astro";
import MainLayout from "../../layouts/MainLayout.astro";
import SidebarLayout from "../../layouts/SidebarLayout.astro";


type TagCounts = {
    [tag: string]: number;
};

const countTags = (posts: CollectionEntry<"blog">[]): TagCounts =>
    posts.reduce((acc: TagCounts, post) => {
        post.data.tags.forEach(tag => {
            acc[tag] = (acc[tag] || 0) + 1;
        });
        return acc;
    }, {});

const getTags = async (): Promise<{
    allTags: string[];
    tagCounts: TagCounts;
}> => {
    const allPosts: CollectionEntry<"blog">[] = await getCollection("blog");
    const processedPosts = processPosts(allPosts);

    const tagCounts = countTags(processedPosts);
    const allTags = Object.keys(tagCounts).sort(
        (a, b) => tagCounts[b] - tagCounts[a]
    );

    return {allTags, tagCounts};
};

const {allTags, tagCounts} = await getTags();
---

<BaseLayout>
    <SidebarLayout/>
    <MainLayout>
        <div class="grid grid-cols-1 xl:grid-cols-4 gap-8 h-auto max-w-screen-xl mx-auto">
            <article class="col-span-3 p-[4rem]">
                <h1 class="text-2xl font-semibold">
                    There are <span class="text-purple-600">{allTags.length}</span> tags!
                </h1>
                <TagList tags={allTags} tagCounts={tagCounts}/>
                <hr/>
            </article>
            <div class="hidden xl:block col-span-1 w-[16rem]">
                <div class="border-l h-full">

                </div>
            </div>
        </div>
    </MainLayout>
</BaseLayout>
